apiVersion: "argoproj.io/v1alpha1"
kind: "Workflow"
metadata:
  generateName: "ogdc-recipe-ice-basins-pdg-"
  labels:
    # TODO: What is?
    workflows.argoproj.io/archive-strategy: "false"
  annotations:
    workflows.argoproj.io/description: |
      This is a spike on creating PDG visualization tiles for the QGreenland
      ice basins layer
spec:
  entrypoint: "main"
  templates:
  - name: "main"
    dag:
      tasks:
        - name: "ingest"
          template: "ingest-template"
          arguments:
            artifacts:
              - name: "cut-file"
                http:
                  url: "https://raw.githubusercontent.com/nsidc/qgreenland/v3.0.0/qgreenland/assets/greenland_rectangle.geojson"
              - name: "data-file"
                http:
                  url: "https://dataverse.geus.dk/api/access/datafile/freshwater/ice/50067"

        - name: "viz-stage"
          dependencies: ["ingest"]
          templateRef:
            name: "ogdc-viz-workflow"
            template: "viz-stage"

        - name: "viz-3dtiles"
          dependencies: ["viz-stage"]
          templateRef:
            name: "ogdc-viz-workflow"
            template: "viz-3dtiles"
          arguments:
            artifacts:
              - name: "staging-output"
                from: "{{ tasks.viz-stage.outputs.artifacts.staging-output }}"


  - name: "ingest-template"
    inputs:
      artifacts:
        - name: "cut-file"
          path: "/tmp/input/greenland_rectangle.geojson"
        - name: "data-file"
          path: "/tmp/input/basins.gpkg"

    container:
      image: "ghcr.io/osgeo/gdal:alpine-normal-latest"
      command: ["ogr2ogr"]
      args:
        - "-lco"
        - "ENCODING=UTF-8"
        - "-t_srs"
        - "EPSG:3413"
        - "-clipdst"
        - "{{ inputs.artifacts.cut-file.path }}"
        - "-makevalid"
        - "{{ outputs.artifacts.ingest-output.path }}/basins.gpkg"
        - "{{ inputs.artifacts.data-file.path }}"
      volumeMounts:
        - name: "output-mount"
          # TODO: DRY
          mountPath: "/tmp/output"

    volumes:
      - name: "output-mount"
        emptyDir: {}

    outputs:
      artifacts:
        - name: "ingest-output"
          path: "/tmp/output"
